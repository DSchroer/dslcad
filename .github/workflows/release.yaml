name: DSLCAD Release

on:
  release:
    types: [ created ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  vscode:
    name: DSLCAD VSCode Extension
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 23
          registry-url: https://registry.npmjs.org/
      - run: npm i -g vsce
      - run: just build-vscode-extension
      - uses: actions/upload-artifact@v4
        with:
          name: dslcad.vsix
          path: ./dslcad.vsix

  examples:
    name: DSLCAD Examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - run: just build-examples
      - uses: actions/upload-artifact@v4
        with:
          name: examples.zip
          path: ./examples.zip

  docs:
    name: DSLCAD Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - uses: lovasoa/setup-emscripten@master
        with:
          emscripten-version: '1.38.47'
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - run: rustup update stable && rustup default stable && rustup target add wasm32-unknown-emscripten && rustup target add wasm32-unknown-unknown
      - run: just build-docs-editor
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --force

  pack_release:
    name: DSLCAD Release
    continue-on-error: true
    strategy:
      matrix:
        include:
          - os: "ubuntu-latest"
            target: "x86_64-unknown-linux-gnu"
          - os: "macos-13"
            target: "x86_64-apple-darwin"
          - os: "macos-latest"
            target: "aarch64-apple-darwin"
          - os: "windows-latest"
            target: "x86_64-pc-windows-msvc"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v2
      - run: rustup update stable && rustup default stable && rustup target add ${{ matrix.target }}
      - run: just CMAKE_BUILD_PARALLEL_LEVEL=4 TARGET=${{ matrix.target }} pack
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}.zip
          path: ./${{ matrix.target }}.zip
